{"version":3,"sources":["webpack://AGRPro-docs/./src/components/image.js","webpack://AGRPro-docs/./src/components/table-params-row.js","webpack://AGRPro-docs/./src/components/table-params.js","webpack://AGRPro-docs/./src/components/api-docs.js","webpack://AGRPro-docs/./src/templates/api-template.js"],"names":["fixed","css","item","key","name","children","find","child","content","type","desc","theme","node","params","inputs","xml","toLowerCase","xmlChildren","filter","xmlChild","isExec","isTarget","findParams","length","map","i","findXML","isDelegate","first","findImage","images","relativePath","replace","dirname","img","parent","console","log","data","pageContext","title","classParent","description","slug","members","edges","sort","a","b","isDelegateA","isDelegateB","isVariableA","isVariableB","variables","delegates","nodes","headings","depth","value","SEO","image","Layout","disableTableOfContents","id","slugify","GetVariableType","Link","to"],"mappings":"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","file":"component---src-templates-api-template-js-bec865663e6572ca0a23.js","sourcesContent":["import React from \"react\"\nimport Img from \"gatsby-image\"\nimport { css } from '@emotion/react';\n\nconst Image = ({ fixed }) => (\n    <div css={css`text-align: center; padding: 16px; 0`}>\n        <Img fixed={fixed} />\n    </div>\n)\n\nexport default Image","import { css } from '@emotion/react'\nimport React from \"react\"\nimport theme from \"../@mklabs/gatsby-theme-docs/styles/theme\"\n\nconst TableParamsRow = ({ item, key }) => {\n    const name = item.children.find(child => child.name === \"name\").content\n    const type = item.children.find(child => child.name === \"type\").content\n    const desc = item.children.find(child => child.name === \"description\").content\n\n    return (\n        <tr key={key}>\n            <td>\n                <p css={css`color: ${theme.colors.link}; margin-bottom: 0`}>{name}</p>\n                <p css={css`font-size: 14px; margin-bottom: 0; font-style: italic`}>{type}</p>\n            </td>\n            <td css={css`vertical-align: baseline`}>\n                {desc}\n            </td>\n        </tr>\n    )\n}\n\nexport default TableParamsRow","import React from \"react\"\nimport TableParamsRow from \"./table-params-row\"\n\nconst TableParams = ({ node, type }) => {\n    // Filter out unwanted inputs (such as Exec and Target)\n    const findParams = (node) => {\n        const inputs = node.xml.find(item => item.name === type.toLowerCase())\n        if (!inputs) {\n            return;\n        }\n        let { xmlChildren } = inputs;\n\n        return xmlChildren.filter(xmlChild => {\n            const isExec = xmlChild.children.find(child => child.name === \"type\" && child.content === \"Exec\");\n            const isTarget = xmlChild.children.find(child => child.name === \"name\" && child.content === \"Target\");\n            return !isExec && !isTarget;\n        })\n    }\n\n    const params = findParams(node)\n    if (!params || !params.length) {\n        return null;\n    }\n\n    return (\n        <>\n            <h3>{type}</h3>\n            <table>\n                <tbody>\n                    {params.map((item, i) => (\n                        <TableParamsRow item={item} key={i} />\n                    ))}\n                </tbody>\n            </table>\n        </>\n    )\n}\n\nexport default TableParams","// import React from `react`;\n// export default ({ data }) => <pre>{JSON.stringify(data, null, 2)}</pre>;\n\nimport React from \"react\";\nimport { css } from \"@emotion/react\";\nimport theme from \"../@mklabs/gatsby-theme-docs/styles/theme\"\n\nimport Layout from \"@mklabs/gatsby-theme-docs/src/components/Layout\";\nimport SEO from \"@mklabs/gatsby-theme-docs/src/components/SEO\";\nimport slugify from \"@mklabs/gatsby-theme-docs/src/util/slug\";\nimport Image from \"./image\"\nimport { Link } from \"gatsby\"\nimport TableParams from \"./table-params\";\n\n\nconst findXML = (node, name) => {\n    return node.xml.find(item => item.name === name)\n}\n\nconst isDelegate = (node) => {\n    const params = findParams(node, `outputs`)\n    if (!params || !params.length) return false\n\n    const first = params[0]\n    if (!first || !first.children) return false\n\n    const child = first.children[0]\n    if (!child) return false;\n\n    return child.content === `Output Delegate`\n}\n\nconst GetVariableType = (node) => {\n    const params = findParams(node, `outputs`)\n    if (!params || !params.length) return\n\n    const first = params[0]\n    if (!first || !first.children) return\n\n    const type = first.children.find(child => child.name === `type`)\n    if (!type) return\n\n    return type.content\n}\n\n// Filter out unwanted inputs (such as Exec and Target)\nconst findParams = (node, type) => {\n    const inputs = node.xml.find(item => item.name === type.toLowerCase())\n    if (!inputs) {\n        return;\n    }\n    let { xmlChildren } = inputs;\n\n    return xmlChildren.filter(xmlChild => {\n        const isExec = xmlChild.children.find(child => child.name === `type` && child.content === `Exec`);\n        const isTarget = xmlChild.children.find(child => child.name === `name` && child.content === `Target`);\n        return !isExec && !isTarget;\n    })\n}\n\nconst findImage = (node, images) => {\n    const imgNode = node.xml.find(item => item.name === `imgpath`);\n    const relativePath = imgNode.content.replace(/^\\.\\./, node.dirname)\n    const img = images.find(({ node }) => node.parent.relativePath === relativePath)\n    if (!img) console.log(node, images, relativePath)\n    if (!img) {\n        // TODO: for unknown reason, Set{Health, Stamina, Mana}Percentage images are not generated by KantanDoc\n        return undefined;\n    }\n    return img.node.fixed;\n}\n\n\nconst Docs = ({ data, pageContext }) => {\n    const title = `${pageContext.classParent}`\n    const description = `Generated API documentation for ${pageContext.classParent}`\n    const slug = pageContext.slug\n    const image = ``\n\n    let members = data.members.edges\n    const images = data.images.edges\n\n    members.sort((a, b) => {\n        const isDelegateA = isDelegate(a.node)\n        const isDelegateB = isDelegate(b.node)\n\n        if (isDelegateA && isDelegateB) return 0\n        if (!isDelegateA && isDelegateB) return 1\n        if (isDelegateA && !isDelegateB) return -1\n    })\n\n    members.sort((a, b) => {\n        const typeA = findXML(a.node, `type`).content\n        const typeB = findXML(b.node, `type`).content\n        const isVariableA = typeA === `Variable`\n        const isVariableB = typeB === `Variable`\n\n        if (isVariableA && isVariableB) return 0\n        if (!isVariableA && isVariableB) return 1\n        if (isVariableA && !isVariableB) return -1\n    })\n\n    const variables = members.filter(({ node }) => {\n        return findXML(node, `type`).content === `Variable`\n    })\n\n    const delegates = members.filter(({ node }) => {\n        return isDelegate(node)\n    })\n\n    const nodes = members.filter(({ node }) => {\n        return findXML(node, `type`).content === `Node` && !isDelegate(node)\n    })\n\n    const headings = members.map(({ node }) => ({\n        depth: 2,\n        value: node.name\n    }))\n\n    return (\n        <>\n            <SEO title={title} description={description} slug={slug} image={image} />\n            <Layout\n                disableTableOfContents={false}\n                title={title}\n                headings={headings}\n            >\n\n                <h2>Properties</h2>\n                {variables.map(({ node }) => (\n                    <div key={node.name}>\n                        <div css={css`padding-bottom: 24px;`}>\n                            <h3 id={slugify(node.name)}>{node.name}</h3>\n                            <p>\n                                {findXML(node, `description`).content}\n                            </p>\n\n                            <p css={css`color: ${theme.colors.text}; margin-bottom: 0; font-style: italic`}>{GetVariableType(node)}</p>\n                        </div>\n\n                        <hr />\n                    </div>\n                ))}\n\n\n                <h2>Events</h2>\n                {delegates.map(({ node }) => (\n                    <div key={node.name}>\n                        <div css={css`padding-bottom: 24px;`}>\n                            <h3 id={slugify(node.name)}>{node.name}</h3>\n                            <p>\n                                {findXML(node, `description`).content}\n                            </p>\n\n                            <Image fixed={findImage(node, images)} />\n                            <TableParams node={node} type=\"Inputs\" />\n                            <TableParams node={node} type=\"Outputs\" />\n                        </div>\n\n                        <hr />\n                    </div>\n                ))}\n\n                <h2>Functions</h2>\n                {nodes.map(({ node }) => (\n                    <div key={node.name}>\n                        <div css={css`padding-bottom: 24px;`}>\n                            <h3 id={slugify(node.name)}>{node.name}</h3>\n                            <p>\n                                {findXML(node, `description`).content}\n                            </p>\n\n                            <Image fixed={findImage(node, images)} />\n                            <TableParams node={node} type=\"Inputs\" />\n                            <TableParams node={node} type=\"Outputs\" />\n                        </div>\n\n                        <hr />\n                    </div>\n                ))}\n\n                <p css={css`margin: 48px 0; text-align: center; font-style: italic`}>\n                    API documentation generated thanks to <Link to=\"http://kantandev.com/free/kantan-doc-gen\">Kantan Doc Gen</Link>\n                </p>\n\n            </Layout>\n        </>\n    );\n}\n\nexport default Docs","import { graphql } from 'gatsby';\nimport ApiDocsComponent from '../components/api-docs';\n\nexport default ApiDocsComponent;\n\nexport const query = graphql`\n  query($directory: String!, $classParent: String!) {\n    files: allFile(filter: {extension: {eq: \"xml\"}, relativeDirectory: { eq: $directory }}) {\n      edges {\n        node {\n          name\n          extension\n          relativePath\n          relativeDirectory\n        }\n      }\n    }\n\n    members: allApiDocsNode(filter: {classParent: {eq: $classParent }}) {\n      edges {\n        node {\n          name\n          type\n          relativeDirectory\n          basename\n          classParent\n          dirname\n          xml {\n            name\n            content\n            xmlChildren {\n              name\n              children {\n                name\n                content\n              }\n              content\n            }\n          }\n        }\n      }\n    }\n\n    images: allImageSharp {\n      edges {\n        node {\n          original {\n            width\n            height\n            src\n          }\n          parent {\n            ... on File {\n              name\n              relativePath\n              relativeDirectory\n            }\n          }\n\n          fixed(width: 750) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  }\n`;"],"sourceRoot":""}